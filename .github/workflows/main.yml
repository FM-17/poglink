name: Main CI Workflow
on: 
  pull_request:
  push:
    branches: 
      - main 

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.3.1
        with: 
          python-version: 3.7
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            requirements.dev.txt
      - run: pip install -r requirements.dev.txt .
      - run: pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.3.1
        with:  
          python-version: 3.7
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            requirements.dev.txt
      - run: pip install -r requirements.dev.txt .
      - name: Run Black Linting
        run: black --check ark_discord_bot tests

  semantic-release-python:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'      
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0  # https://github.com/pypa/setuptools_scm/issues/480
      - name: Install twine 
        run: pip install twine
      - name: Semantic Release 
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v2.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TWINE_USERNAME: __token__ 
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_API_TOKEN }}
          TWINE_NON_INTERACTIVE: true
        with: 
          semantic_version: 18
          extra_plugins: |
            @semantic-release/exec@v6
          branches: "[ 'main' ]"
    outputs:
      package_version: ${{ steps.semantic_release.outputs.new_release_version }}

  publish-non-release-python:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0  # https://github.com/pypa/setuptools_scm/issues/480
      - uses: actions/setup-python@v2.3.1
        with:  
          python-version: 3.7
          cache: 'pip'
          cache-dependency-path: |
            setup.py
            requirements.dev.txt
      - run: pip install -r requirements.dev.txt .
      - name: Build non-release
        run: |
          make python-build
      - name: Publish to test.pypi.org
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  # adding as a placeholder
  publish-docker-release:
    runs-on: ubuntu-latest
    needs: semantic-release-python
    env:
      VERSION: ${{ needs.semantic-release-python.outputs.package_version }}
    steps:
      - run: echo ${VERSION}
